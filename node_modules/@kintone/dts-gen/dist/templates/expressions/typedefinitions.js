"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SavedTypeDefinition = exports.TypeDefinition = void 0;
const expression_1 = require("./expression");
class TypeDefinition {
    constructor(typeName, fieldGroup, subtableFields) {
        this.typeName = typeName;
        this.fieldGroup = fieldGroup;
        this.subtableFields = subtableFields;
    }
    tsExpression() {
        return `
interface ${this.typeName} {
    ${this.fieldGroup.tsExpression()}
    ${(0, expression_1.toTsExpressions)(this.subtableFields)}
}`.trim();
    }
}
exports.TypeDefinition = TypeDefinition;
class SavedTypeDefinition {
    constructor(typeName, userFields, stringFieldsInSavedRecord) {
        this.typeName = typeName;
        this.userFields = userFields;
        this.stringFieldsInSavedRecord = stringFieldsInSavedRecord;
    }
    tsExpression() {
        return `
interface Saved${this.typeName} extends ${this.typeName} {
    $id : kintone.fieldTypes.Id;
    $revision: kintone.fieldTypes.Revision;
    ${(0, expression_1.toTsExpressions)(this.userFields)}
    ${(0, expression_1.toTsExpressions)(this.stringFieldsInSavedRecord)}
}`.trim();
    }
}
exports.SavedTypeDefinition = SavedTypeDefinition;
//# sourceMappingURL=typedefinitions.js.map